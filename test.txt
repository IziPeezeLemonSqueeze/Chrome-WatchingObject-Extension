-- ERRORE
System.debug('@STRid');
List<Account> acc = [SELECT Id FROM Account WHERE Id =: '@IDidacc' and '@BOLactive'];
System.debug('@BOLactive');

-- BUONO
System.debug('@STRid');
System.debug('@NMBeta');
System.debug('@BOLisactive');
List<Account> accList = [SELECT Id FROM Account LIMIT '@NMBlimit'];
System.debug(accList);
// Id batchJobId = Databse.executeBatch(new Batch(), '@NMBbatch');
String ids = '@Vid1, @Vid2';
String ids_v2 = '@Vid3';

System.debug('@STRid');
System.debug('@NMBeta');
System.debug('@Vnome');
System.debug('@BOLactive');

String whereClause = 'WHERE Id in (@Vidaccount)';
List<Account> accList = Database.query('SELECT Id FROM Account ' + whereClause):


// 001IY000002ZlKqYAK    
//(Account:{Id=001IY000002ZlKtYAK}, Account:{Id=001IY000002ZlKqYAK}) 
List<Account> accList = [SELECT Id FROM Account LIMIT '@NMBlimit'];
System.debug(accList);

// TEST V - SBAGLIATO  
String queryStrg = 'SELECT Id FROM Account WHERE Id = @Vidaccount';
List<Account> accList = Database.query(queryStrg);

// INTRODUZIONE ALLA VARIABILE @ID - GIUSTO  
Id queryID = '@IDidaccount';
String queryStrg = 'SELECT Id FROM Account WHERE id =: queryID';
List<Account> accList = Database.query(queryStrg);
System.debug(accList);

// USO CORRETTO DI V  
String ids = '@Vid1, @Vid2';
System.debug(ids);


#___________________________________________________#

Fixare il menu contestuale


PRESENTAZIONE
CODE SNIPPET
Serve per aiutare nel quotidiano il lancio di script direttamente dalla console.

Quante volte capita di dover copiare e incollare script salvati sul notepad o commentare intere
sezioni di codice e scommentarne altre da far funzionare.
Senza contare le innumerevoli volte in cui dobbiamo anche modificarlo per farlo funzionare!

Con CODE SNIPPET tutto questo sarÃ  piÃ¹ veloce comodo ed elegante, lasciando QUESTO spazio LIBERO 
da paginate di script commentato e magari neanche piÃ¹ in uso!

------------------------------------------------

STEP 1 COME CREARE SNIPPET
Come creare snippet o meglio frammenti di codice riutilizzabile a piacimento e facilmente editabili

Per salvare uno snippet il modo migliore Ã¨ prima scriverlo, poi testarlo, e se Ã¨ utile conservarlo 
allora seleziona tutto il codice che ti serve conservare e fai:
click destro sul codice selezionato > 'Salva selezione come CodeSnippet'
    
Prova tu a scrivere:
System.debug('Hello CodeSnippet!');

Seleziona tutta la riga 9 e fai come in riga 6!
Ora dovrebbe aprirsi un prompt che ti chiede il nome con cui salvare questo snippet
noi lo chiameremo 'Hello CS'

------------------------------------------------

STEP 2 LANCIARE UNO SNIPPET
Ora che abbiamo creato uno snippet Ã¨ giunto il momento di lanciarlo!

Clicca il pulsate [Code Snippet]  in basso a sinistra su questa finestra!
    
Qui dovresti vedere il tuo snippet appena creato: Hello CS
con i relativi pulsanti [RUN ðŸš€][ðŸ’¾][ðŸš½]
    
[RUN ðŸš€] Serve per eseguire lo snippet come se avessi selezionato tu il codice in questa schermata *
    	  e premuto Execute Highlighted
[ðŸ’¾]	 Serve per mettere nella clipboard (come fare ctrl+c) lo snippet completo
[ðŸš½]	 Serve beh... per... te lo lascio immaginare ...cancellare lo snippet
    
    
* P.S noterai che il run sarÃ  di colore verde, esiste anche la versione arancione, ma di questo ne
      parleremo piÃ¹ avanti!

    RUN!

------------------------------------------------

STEP 3 RUN AVANZATO
Ti ricordi quando ti ho detto che esiste una versione avanzata del run che ti consente di modificare lo 
snippet runtime?
Ah no? non l"ho fatto?
    
Va beh allora sicuramente hai sentito parlare del run arancione, ecco il run arancione Ã¨ cosÃ¬ quando uno
snippet ha la capacitÃ  di interrogarti sul valore di alcune variabili, in modo che tu non debba
ricordarti di modificare lo snippet prima di lanciarlo e come.
    
Su come creare questi tipi di snippet lo vediamo lo step dopo ora capiamoli!
Crea come hai fatto prima uno snippet da questo codice:
System.debug('Ciao mi chiamo @Vnome e ho @Vanni anni');
Dagli il nome che preferisci e salvalo!
Come hai notato ci sono delle cose che non tornano, che razza di variabile dovrebbe essere
@Vnome e @Vanni.
Ecco il superpotere di CodeSnippet!

------------------------------------------------

STEP 4 RUN ARANCIONE
Lo so ti avevo promesso di spiegarti le variabili...
    
Ma prima eseguiamo questo run arancione e vediamo come si comporta!
    
Come hai visto ci sono stati due prompt.
Uno chiedeva il nome e l altro l etÃ !

Guardiamo il log!
    
Ok ora Ã¨ il momento di farli noi sti supersnippet!


------------------------------------------------


STEP X VARIABILI
CODE SNIPPET
Tipi di Variabili: 
	@NMB 	:	Numero 	(int, float, double ecc...)
    @BOL	:	Boolean (true, false)
    @STR	: 	String	(provatesto)
    @V		:	Any		(PuÃ² essere qualsiasi cosa, puÃ² stare ovunque)

Composizione Variabile:
String nome 	= '@STRnome';
Int eta 		= '@NMBeta';
Boolean attivo 	= '@BOLattivo';
Le variabili sono composte da '@....' e dentro gli apici e dopo la chiocciola mettiamo il tipo e
e il nome della variabile TUTTO MINUSCOLO! tutto attaccato e senza simboli come: . - _ +  ecc...
Per concatenare due o piÃ¹ variabili: '@NMBnumero''@NMBsecondonumero'

La variabile @V si usa in modi particolari, tipo quando ce da sostituire una concatenazione di stringhe
Vediamo alcuni esempi!